
jgaff001_lab4_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000018e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000202  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000202  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000234  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000087e  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007cd  00000000  00000000  00000b1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000036f  00000000  00000000  000012e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00001658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000431  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001abd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a1 30       	cpi	r26, 0x01	; 1
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	66 d0       	rcall	.+204    	; 0x176 <main>
  aa:	6f c0       	rjmp	.+222    	; 0x18a <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <keypad>:
#define Y (PINA & 0x02)
#define hashtag (PINA & 0x04)
#define lock (PINA & 0x80)

void keypad() {
	switch(state) {
  ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	e1 f0       	breq	.+56     	; 0xee <keypad+0x40>
  b6:	28 f4       	brcc	.+10     	; 0xc2 <keypad+0x14>
  b8:	88 23       	and	r24, r24
  ba:	49 f0       	breq	.+18     	; 0xce <keypad+0x20>
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	59 f0       	breq	.+22     	; 0xd6 <keypad+0x28>
  c0:	52 c0       	rjmp	.+164    	; 0x166 <keypad+0xb8>
  c2:	83 30       	cpi	r24, 0x03	; 3
  c4:	61 f1       	breq	.+88     	; 0x11e <keypad+0x70>
  c6:	84 30       	cpi	r24, 0x04	; 4
  c8:	09 f4       	brne	.+2      	; 0xcc <keypad+0x1e>
  ca:	41 c0       	rjmp	.+130    	; 0x14e <keypad+0xa0>
  cc:	4c c0       	rjmp	.+152    	; 0x166 <keypad+0xb8>
		case start:
			state = init;
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
  d4:	4b c0       	rjmp	.+150    	; 0x16c <keypad+0xbe>
		case init:
			if (hashtag && !X && !Y && !lock) {
  d6:	02 9b       	sbis	0x00, 2	; 0
  d8:	49 c0       	rjmp	.+146    	; 0x16c <keypad+0xbe>
  da:	00 99       	sbic	0x00, 0	; 0
  dc:	47 c0       	rjmp	.+142    	; 0x16c <keypad+0xbe>
  de:	01 99       	sbic	0x00, 1	; 0
  e0:	45 c0       	rjmp	.+138    	; 0x16c <keypad+0xbe>
  e2:	07 99       	sbic	0x00, 7	; 0
  e4:	43 c0       	rjmp	.+134    	; 0x16c <keypad+0xbe>
				state = button;
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  ec:	08 95       	ret
			else {
				state = init;
			}
			break;
		case button:
			if (hashtag && !X && !Y && !lock) {
  ee:	02 9b       	sbis	0x00, 2	; 0
  f0:	06 c0       	rjmp	.+12     	; 0xfe <keypad+0x50>
  f2:	00 99       	sbic	0x00, 0	; 0
  f4:	04 c0       	rjmp	.+8      	; 0xfe <keypad+0x50>
  f6:	01 99       	sbic	0x00, 1	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <keypad+0x50>
  fa:	07 9b       	sbis	0x00, 7	; 0
  fc:	3b c0       	rjmp	.+118    	; 0x174 <keypad+0xc6>
				state = button;
			}
			else if (!hashtag && !X && !Y && !lock) {
  fe:	02 99       	sbic	0x00, 2	; 0
 100:	0a c0       	rjmp	.+20     	; 0x116 <keypad+0x68>
 102:	00 99       	sbic	0x00, 0	; 0
 104:	08 c0       	rjmp	.+16     	; 0x116 <keypad+0x68>
 106:	01 99       	sbic	0x00, 1	; 0
 108:	06 c0       	rjmp	.+12     	; 0x116 <keypad+0x68>
 10a:	07 99       	sbic	0x00, 7	; 0
 10c:	04 c0       	rjmp	.+8      	; 0x116 <keypad+0x68>
				state = wait;
 10e:	83 e0       	ldi	r24, 0x03	; 3
 110:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 114:	08 95       	ret
			}
			else {
				state = init;
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 11c:	27 c0       	rjmp	.+78     	; 0x16c <keypad+0xbe>
			}
			break;
		case wait:
			if (!hashtag && !X && Y && !lock) {
 11e:	02 99       	sbic	0x00, 2	; 0
 120:	0a c0       	rjmp	.+20     	; 0x136 <keypad+0x88>
 122:	00 99       	sbic	0x00, 0	; 0
 124:	08 c0       	rjmp	.+16     	; 0x136 <keypad+0x88>
 126:	01 9b       	sbis	0x00, 1	; 0
 128:	06 c0       	rjmp	.+12     	; 0x136 <keypad+0x88>
 12a:	07 99       	sbic	0x00, 7	; 0
 12c:	04 c0       	rjmp	.+8      	; 0x136 <keypad+0x88>
				state = button2;
 12e:	84 e0       	ldi	r24, 0x04	; 4
 130:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 134:	1d c0       	rjmp	.+58     	; 0x170 <keypad+0xc2>
			}
			else if (!hashtag && !X && !Y && !lock) {
 136:	02 99       	sbic	0x00, 2	; 0
 138:	06 c0       	rjmp	.+12     	; 0x146 <keypad+0x98>
 13a:	00 99       	sbic	0x00, 0	; 0
 13c:	04 c0       	rjmp	.+8      	; 0x146 <keypad+0x98>
 13e:	01 99       	sbic	0x00, 1	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <keypad+0x98>
 142:	07 9b       	sbis	0x00, 7	; 0
 144:	17 c0       	rjmp	.+46     	; 0x174 <keypad+0xc6>
				state = wait;
			}
			else {
				state = init;
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 14c:	0f c0       	rjmp	.+30     	; 0x16c <keypad+0xbe>
			}
			break;
		case button2:
			if (!hashtag && !X && !Y && lock) {
 14e:	02 99       	sbic	0x00, 2	; 0
 150:	0f c0       	rjmp	.+30     	; 0x170 <keypad+0xc2>
 152:	00 99       	sbic	0x00, 0	; 0
 154:	0d c0       	rjmp	.+26     	; 0x170 <keypad+0xc2>
 156:	01 99       	sbic	0x00, 1	; 0
 158:	0b c0       	rjmp	.+22     	; 0x170 <keypad+0xc2>
 15a:	07 9b       	sbis	0x00, 7	; 0
 15c:	09 c0       	rjmp	.+18     	; 0x170 <keypad+0xc2>
				state = init;
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 164:	03 c0       	rjmp	.+6      	; 0x16c <keypad+0xbe>
			else {
				state = button2;
			}
			break;
		default:
			state = start;
 166:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
			break;
 16a:	08 95       	ret
	}
	switch(state) {
		
		case init:
			PORTB = 0x00;
 16c:	15 b8       	out	0x05, r1	; 5
			break;
 16e:	08 95       	ret
		case button:
			break;
		case wait:
			break;
		case button2:
			PORTB = 0x01;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	85 b9       	out	0x05, r24	; 5
 174:	08 95       	ret

00000176 <main>:
			break;
	}
}
int main(void)
{
    DDRA = 0x00; PORTA = 0xFF;
 176:	11 b8       	out	0x01, r1	; 1
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 17c:	84 b9       	out	0x04, r24	; 4
 17e:	15 b8       	out	0x05, r1	; 5
	PORTB = 0x00;
 180:	15 b8       	out	0x05, r1	; 5
	
	state = start;
 182:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    while (1) 
    {
		keypad();
 186:	93 df       	rcall	.-218    	; 0xae <keypad>
 188:	fe cf       	rjmp	.-4      	; 0x186 <main+0x10>

0000018a <_exit>:
 18a:	f8 94       	cli

0000018c <__stop_program>:
 18c:	ff cf       	rjmp	.-2      	; 0x18c <__stop_program>
