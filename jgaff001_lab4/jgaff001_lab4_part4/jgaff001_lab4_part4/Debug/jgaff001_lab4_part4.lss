
jgaff001_lab4_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000024e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  0000024e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000280  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000884  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007cd  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003e3  00000000  00000000  00001339  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000171c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000437  00000000  00000000  00001750  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001b87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a1 30       	cpi	r26, 0x01	; 1
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	8a d0       	rcall	.+276    	; 0x1be <main>
  aa:	95 c0       	rjmp	.+298    	; 0x1d6 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <keypad>:
#define Y (PINA & 0x02)
#define hashtag (PINA & 0x04)
#define lock (PINA & 0x80)

void keypad() {
	switch(state) {
  ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	f1 f0       	breq	.+60     	; 0xf2 <keypad+0x44>
  b6:	28 f4       	brcc	.+10     	; 0xc2 <keypad+0x14>
  b8:	88 23       	and	r24, r24
  ba:	59 f0       	breq	.+22     	; 0xd2 <keypad+0x24>
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	69 f0       	breq	.+26     	; 0xda <keypad+0x2c>
  c0:	67 c0       	rjmp	.+206    	; 0x190 <keypad+0xe2>
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	09 f4       	brne	.+2      	; 0xc8 <keypad+0x1a>
  c6:	48 c0       	rjmp	.+144    	; 0x158 <keypad+0xaa>
  c8:	60 f1       	brcs	.+88     	; 0x122 <keypad+0x74>
  ca:	85 30       	cpi	r24, 0x05	; 5
  cc:	09 f4       	brne	.+2      	; 0xd0 <keypad+0x22>
  ce:	48 c0       	rjmp	.+144    	; 0x160 <keypad+0xb2>
  d0:	5f c0       	rjmp	.+190    	; 0x190 <keypad+0xe2>
		case start:
			state = init;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
  d8:	68 c0       	rjmp	.+208    	; 0x1aa <keypad+0xfc>
		case init:
			if (hashtag && !X && !Y && !lock) {
  da:	02 9b       	sbis	0x00, 2	; 0
  dc:	66 c0       	rjmp	.+204    	; 0x1aa <keypad+0xfc>
  de:	00 99       	sbic	0x00, 0	; 0
  e0:	64 c0       	rjmp	.+200    	; 0x1aa <keypad+0xfc>
  e2:	01 99       	sbic	0x00, 1	; 0
  e4:	62 c0       	rjmp	.+196    	; 0x1aa <keypad+0xfc>
  e6:	07 99       	sbic	0x00, 7	; 0
  e8:	60 c0       	rjmp	.+192    	; 0x1aa <keypad+0xfc>
				state = button;
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  f0:	60 c0       	rjmp	.+192    	; 0x1b2 <keypad+0x104>
			else {
				state = init;
			}
			break;
		case button:
			if (hashtag && !X && !Y && !lock) {
  f2:	02 9b       	sbis	0x00, 2	; 0
  f4:	06 c0       	rjmp	.+12     	; 0x102 <keypad+0x54>
  f6:	00 99       	sbic	0x00, 0	; 0
  f8:	04 c0       	rjmp	.+8      	; 0x102 <keypad+0x54>
  fa:	01 99       	sbic	0x00, 1	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <keypad+0x54>
  fe:	07 9b       	sbis	0x00, 7	; 0
 100:	58 c0       	rjmp	.+176    	; 0x1b2 <keypad+0x104>
				state = button;
			}
			else if (!hashtag && !X && !Y && !lock) {
 102:	02 99       	sbic	0x00, 2	; 0
 104:	0a c0       	rjmp	.+20     	; 0x11a <keypad+0x6c>
 106:	00 99       	sbic	0x00, 0	; 0
 108:	08 c0       	rjmp	.+16     	; 0x11a <keypad+0x6c>
 10a:	01 99       	sbic	0x00, 1	; 0
 10c:	06 c0       	rjmp	.+12     	; 0x11a <keypad+0x6c>
 10e:	07 99       	sbic	0x00, 7	; 0
 110:	04 c0       	rjmp	.+8      	; 0x11a <keypad+0x6c>
				state = wait;
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 118:	4f c0       	rjmp	.+158    	; 0x1b8 <keypad+0x10a>
			}
			else {
				state = init;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 120:	44 c0       	rjmp	.+136    	; 0x1aa <keypad+0xfc>
			}
			break;
		case wait:
			if (!hashtag && !X && Y && !lock) {
 122:	02 99       	sbic	0x00, 2	; 0
 124:	0d c0       	rjmp	.+26     	; 0x140 <keypad+0x92>
 126:	00 99       	sbic	0x00, 0	; 0
 128:	0b c0       	rjmp	.+22     	; 0x140 <keypad+0x92>
 12a:	01 9b       	sbis	0x00, 1	; 0
 12c:	09 c0       	rjmp	.+18     	; 0x140 <keypad+0x92>
 12e:	07 99       	sbic	0x00, 7	; 0
 130:	07 c0       	rjmp	.+14     	; 0x140 <keypad+0x92>
				state = button2;
 132:	84 e0       	ldi	r24, 0x04	; 4
 134:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
		case wait:
			PORTC = wait;
			break;
		case button2:
			if (PORTB == 0x00) {
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	88 23       	and	r24, r24
 13c:	61 f1       	breq	.+88     	; 0x196 <keypad+0xe8>
 13e:	2e c0       	rjmp	.+92     	; 0x19c <keypad+0xee>
			break;
		case wait:
			if (!hashtag && !X && Y && !lock) {
				state = button2;
			}
			else if (!hashtag && !X && !Y && !lock) {
 140:	02 99       	sbic	0x00, 2	; 0
 142:	06 c0       	rjmp	.+12     	; 0x150 <keypad+0xa2>
 144:	00 99       	sbic	0x00, 0	; 0
 146:	04 c0       	rjmp	.+8      	; 0x150 <keypad+0xa2>
 148:	01 99       	sbic	0x00, 1	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <keypad+0xa2>
 14c:	07 9b       	sbis	0x00, 7	; 0
 14e:	34 c0       	rjmp	.+104    	; 0x1b8 <keypad+0x10a>
				state = wait;
			}
			else {
				state = init;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 156:	29 c0       	rjmp	.+82     	; 0x1aa <keypad+0xfc>
			}
			break;
		case button2:
			state = wait2;
 158:	85 e0       	ldi	r24, 0x05	; 5
 15a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
 15e:	22 c0       	rjmp	.+68     	; 0x1a4 <keypad+0xf6>
		case wait2:
			if (!hashtag && !X && !Y && lock) {
 160:	02 99       	sbic	0x00, 2	; 0
 162:	0a c0       	rjmp	.+20     	; 0x178 <keypad+0xca>
 164:	00 99       	sbic	0x00, 0	; 0
 166:	08 c0       	rjmp	.+16     	; 0x178 <keypad+0xca>
 168:	01 99       	sbic	0x00, 1	; 0
 16a:	06 c0       	rjmp	.+12     	; 0x178 <keypad+0xca>
 16c:	07 9b       	sbis	0x00, 7	; 0
 16e:	04 c0       	rjmp	.+8      	; 0x178 <keypad+0xca>
				state = init;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 176:	19 c0       	rjmp	.+50     	; 0x1aa <keypad+0xfc>
			}
			else if (hashtag && !X && !Y && !lock) {
 178:	02 9b       	sbis	0x00, 2	; 0
 17a:	14 c0       	rjmp	.+40     	; 0x1a4 <keypad+0xf6>
 17c:	00 99       	sbic	0x00, 0	; 0
 17e:	12 c0       	rjmp	.+36     	; 0x1a4 <keypad+0xf6>
 180:	01 99       	sbic	0x00, 1	; 0
 182:	10 c0       	rjmp	.+32     	; 0x1a4 <keypad+0xf6>
 184:	07 99       	sbic	0x00, 7	; 0
 186:	0e c0       	rjmp	.+28     	; 0x1a4 <keypad+0xf6>
				state = button;
 188:	82 e0       	ldi	r24, 0x02	; 2
 18a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 18e:	11 c0       	rjmp	.+34     	; 0x1b2 <keypad+0x104>
			else {
				state = wait2;
			}
			break;
		default:
			state = start;
 190:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 194:	08 95       	ret
		case wait:
			PORTC = wait;
			break;
		case button2:
			if (PORTB == 0x00) {
				PORTB = 0x01;
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	85 b9       	out	0x05, r24	; 5
 19a:	01 c0       	rjmp	.+2      	; 0x19e <keypad+0xf0>
			}
			else {
				PORTB = 0x00;
 19c:	15 b8       	out	0x05, r1	; 5
			}
			PORTC = button2;
 19e:	84 e0       	ldi	r24, 0x04	; 4
 1a0:	88 b9       	out	0x08, r24	; 8
			PORTC = wait2;
			break;
		default:
			break;
	}
}
 1a2:	08 95       	ret
				PORTB = 0x00;
			}
			PORTC = button2;
			break;
		case wait2:
			PORTC = wait2;
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	88 b9       	out	0x08, r24	; 8
			break;
 1a8:	08 95       	ret
			break;
	}
	switch(state) {
		
		case init:
			PORTB = 0x00;
 1aa:	15 b8       	out	0x05, r1	; 5
			PORTC = init;
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	88 b9       	out	0x08, r24	; 8
			break;
 1b0:	08 95       	ret
		case button:
			PORTC = button;
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	88 b9       	out	0x08, r24	; 8
			break;
 1b6:	08 95       	ret
		case wait:
			PORTC = wait;
 1b8:	83 e0       	ldi	r24, 0x03	; 3
 1ba:	88 b9       	out	0x08, r24	; 8
 1bc:	08 95       	ret

000001be <main>:
			break;
	}
}
int main(void)
{
    DDRA = 0x00; PORTA = 0xFF; //inputs
 1be:	11 b8       	out	0x01, r1	; 1
 1c0:	8f ef       	ldi	r24, 0xFF	; 255
 1c2:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; //outputs
 1c4:	84 b9       	out	0x04, r24	; 4
 1c6:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; //outputs
 1c8:	87 b9       	out	0x07, r24	; 7
 1ca:	18 b8       	out	0x08, r1	; 8
	PORTB = 0x00;
 1cc:	15 b8       	out	0x05, r1	; 5
	
	state = start;
 1ce:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    while (1) 
    {
		keypad();
 1d2:	6d df       	rcall	.-294    	; 0xae <keypad>
 1d4:	fe cf       	rjmp	.-4      	; 0x1d2 <main+0x14>

000001d6 <_exit>:
 1d6:	f8 94       	cli

000001d8 <__stop_program>:
 1d8:	ff cf       	rjmp	.-2      	; 0x1d8 <__stop_program>
